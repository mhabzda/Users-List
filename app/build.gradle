apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.mannodermaus.android-junit5'

apply from: "$rootDir/versions.gradle"

android {
  compileSdkVersion 29
  buildToolsVersion "29.0.3"

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }

  defaultConfig {
    applicationId "com.users"
    minSdkVersion 21
    targetSdkVersion 29
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  defaultConfig {
    buildConfigField("String", "GITHUB_TOKEN", getGithubToken("$rootDir/github_token.txt"))
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.core:core-ktx:1.2.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.recyclerview:recyclerview:1.1.0'
  implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.0.0"

  implementation "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"
  implementation "com.google.dagger:dagger-android:$daggerVersion"
  implementation "com.google.dagger:dagger-android-support:$daggerVersion"
  kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
  implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

  implementation "com.squareup.okhttp3:okhttp:$okHttp3Version"

  implementation "com.squareup.moshi:moshi:$moshiVersion"
  kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

  implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
  implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
  implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

  implementation "androidx.room:room-runtime:$roomVersion"
  implementation "androidx.room:room-rxjava2:$roomVersion"
  kapt "androidx.room:room-compiler:$roomVersion"

  implementation "com.github.bumptech.glide:glide:$glideVersion"

  testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
  testImplementation "org.junit.jupiter:junit-jupiter-params:$junit5Version"
  testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

  androidTestImplementation 'androidx.test.ext:junit:1.1.1'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

static String getGithubToken(String filePath) {
  File file = new File(filePath)
  String token
  if (file.exists()) {
    token = "\"${file.text}\""
  } else {
    token = "\"\""
  }
  return token
}